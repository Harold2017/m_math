cmake_minimum_required(VERSION 3.17)
project(m_math)

set(CMAKE_CXX_STANDARD 11)

find_package(GSL REQUIRED)

set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake-modules" ${CMAKE_MODULE_PATH})
find_package(FFTW REQUIRED)
include_directories(${FFTW_INCLUDE_DIRS})

find_package(CGAL REQUIRED)
set(CGAL_DO_NOT_WARN_ABOUT_CMAKE_BUILD_TYPE TRUE)

find_package(OpenCV REQUIRED)
include_directories(${OpenCV_INCLUDE_DIRS})

find_package(Open3D REQUIRED)
include_directories(${Open3D_INCLUDE_DIRS})

include_directories(
        include
        utils)

# examples
add_executable(m_math examples/math.cpp)
add_executable(m_interp examples/interp.cpp)
add_executable(m_fft examples/fft.cpp)
add_executable(m_curvefit examples/curvefit.cpp)
add_executable(m_geo examples/geo.cpp)
add_executable(m_peaks examples/peaks.cpp)
add_executable(m_curvature examples/curvature.cpp)
add_executable(m_filter examples/filter.cpp)
add_executable(m_peak examples/peak.cpp)
add_executable(m_p1d examples/p1d.cpp)
add_executable(m_integration examples/integration.cpp)
add_executable(m_fft_shift examples/fft_shift.cpp)
add_executable(m_autoc examples/autoc.cpp)
add_executable(m_hist examples/hist.cpp)
add_executable(m_fft_opencv examples/fft_opencv.cpp)
add_executable(m_p2d_opencv examples/p2d_opencv.cpp)
add_executable(m_area_opencv examples/area_opencv.cpp)
add_executable(m_distance_CGAL examples/distance.cpp)
add_executable(m_filters_opencv examples/filters_opencv.cpp)
add_executable(m_curvefit_opencv examples/curvefit_opencv.cpp)
add_executable(m_integration_hm examples/integration_hm.cpp)
add_executable(m_correlation examples/correlation.cpp)
add_executable(m_autoc_length examples/autoc_length.cpp)
add_executable(m_stopwatch examples/stop_watch.cpp)
add_executable(m_diff_opencv examples/diff_opencv.cpp)
add_executable(m_mesh_volume_surface_area examples/mesh_volume_surface_area.cpp)
add_executable(m_geo_opencv examples/geo_opencv.cpp)
add_executable(m_io_opencv examples/io_opencv.cpp)
add_executable(m_mesh examples/mesh.cpp)
add_executable(m_filters_opencv_1 examples/filters_opencv_1.cpp)

target_link_libraries(m_interp GSL::gsl GSL::gslcblas)
target_link_libraries(m_fft ${FFTW_LIBRARIES})
target_link_libraries(m_fft_shift ${FFTW_LIBRARIES})
target_link_libraries(m_curvefit GSL::gsl GSL::gslcblas)
target_link_libraries(m_geo CGAL::CGAL GSL::gsl GSL::gslcblas)
target_link_libraries(m_curvature GSL::gsl GSL::gslcblas)
target_link_libraries(m_filter GSL::gsl GSL::gslcblas)
target_link_libraries(m_integration GSL::gsl GSL::gslcblas)
target_link_libraries(m_autoc ${OpenCV_LIBS})
target_link_libraries(m_hist GSL::gsl GSL::gslcblas)
target_link_libraries(m_fft_opencv ${OpenCV_LIBS})
target_link_libraries(m_p2d_opencv ${OpenCV_LIBS})
target_link_libraries(m_area_opencv ${OpenCV_LIBS})
target_link_libraries(m_distance_CGAL CGAL::CGAL)
target_link_libraries(m_filters_opencv ${OpenCV_LIBS})
target_link_libraries(m_curvefit_opencv ${OpenCV_LIBS})
target_link_libraries(m_correlation ${OpenCV_LIBS})
target_link_libraries(m_autoc_length ${OpenCV_LIBS})
target_link_libraries(m_diff_opencv ${OpenCV_LIBS})
target_link_libraries(m_mesh_volume_surface_area ${OpenCV_LIBS})
target_link_libraries(m_geo_opencv ${OpenCV_LIBS})
target_link_libraries(m_io_opencv ${OpenCV_LIBS})
target_link_libraries(m_mesh ${Open3D_LIBRARIES})
target_link_libraries(m_filters_opencv_1 ${OpenCV_LIBS})

# drafts
add_executable(d_filter drafts/filter.cpp)
add_executable(d_curvefit drafts/curvefit.cpp)
add_executable(d_curvature drafts/curvature.cpp)
add_executable(d_correlation drafts/correlation.cpp)
add_executable(d_filter1d drafts/filter1d.cpp)

target_link_libraries(d_filter ${OpenCV_LIBS})
target_link_libraries(d_curvefit ${OpenCV_LIBS})
target_link_libraries(d_curvature ${OpenCV_LIBS})
target_link_libraries(d_correlation ${OpenCV_LIBS})
target_link_libraries(d_filter1d ${OpenCV_LIBS})

# building info
add_executable(opencv_building_info examples/opencv_building_info.cpp)
target_link_libraries(opencv_building_info ${OpenCV_LIBS})
